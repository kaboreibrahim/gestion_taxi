# Generated by Django 5.1.1 on 2025-05-11 13:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_lifecycle.mixins
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Fournisseurs",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Nom_Fournisseur", models.CharField(max_length=255)),
                ("Telephone_Fournisseur", models.CharField(max_length=20)),
                ("Localisation", models.CharField(max_length=50)),
                (
                    "Email_Fournisseur",
                    models.CharField(
                        blank=True,
                        default="mail non spécifié",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Proprietaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                ("N_CNI_proprietaire", models.CharField(max_length=255)),
                (
                    "Proprietaire_CNI_photos",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="Proprietaire_CNI_documents/",
                        verbose_name="Document",
                    ),
                ),
                ("N_registre_commerce", models.CharField(max_length=255)),
                ("Contact", models.CharField(max_length=20)),
                (
                    "Proprietaire_photos",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="Proprietaire_photos/",
                        verbose_name="Photo",
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Chauffeur",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Nom", models.CharField(max_length=255)),
                ("Prenom", models.CharField(max_length=255)),
                ("N_permis", models.CharField(max_length=255)),
                ("N_CNI_chauffeur", models.CharField(max_length=255)),
                (
                    "Chauffeur_CNI_photos",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="Chauffeur_CNI_photos/",
                        verbose_name="Document",
                    ),
                ),
                ("Annee_anciennete", models.CharField(max_length=255)),
                ("Contact", models.CharField(max_length=20)),
                ("Lieu_de_residence", models.CharField(max_length=255)),
                (
                    "Chauffeur_photos",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="Chauffeur_photos/",
                        verbose_name="Photo",
                    ),
                ),
                ("Date_de_prise_service", models.DateField()),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "proprietaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chauffeurs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="LiaisonVehiculeChauffeur",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "chauffeur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.chauffeur"
                    ),
                ),
                (
                    "proprietaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liaison",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModeleDeVoiture",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=255)),
                (
                    "Proprietaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Piece",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom_piece", models.CharField(max_length=255)),
                ("ref_piece", models.CharField(max_length=255)),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "Nom_du_Founissuer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxi.fournisseurs",
                    ),
                ),
                (
                    "modele_de_voiture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxi.modeledevoiture",
                    ),
                ),
                (
                    "proprietaire",
                    models.ForeignKey(
                        default="Inconnu",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="EntreeStock",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_entree",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("quantite", models.IntegerField()),
                (
                    "proprietaire",
                    models.ForeignKey(
                        default="Inconnu",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "piece",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.piece"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="TypeDeVoiture",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=255)),
                (
                    "Proprietaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Vehicule",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("Date_mise_en_circulation", models.DateField()),
                ("immatriculation", models.CharField(max_length=255, unique=True)),
                ("Numero_chassis", models.CharField(max_length=255)),
                ("Nbr_place", models.IntegerField()),
                ("Couleur", models.CharField(max_length=255)),
                (
                    "vehicule_photos",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="Vehicule_photos/",
                        verbose_name="Photo",
                    ),
                ),
                ("Label_voiture", models.IntegerField(default=0)),
                (
                    "Marque_voiture",
                    models.ForeignKey(
                        default="suzuki",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxi.typedevoiture",
                    ),
                ),
                (
                    "Modele_voiture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxi.modeledevoiture",
                    ),
                ),
                (
                    "Proprietaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SortieStock",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_sortie",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("quantite", models.IntegerField()),
                (
                    "piece",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.piece"
                    ),
                ),
                (
                    "proprietaire",
                    models.ForeignKey(
                        default="Inconnu",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxi.vehicule",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Recette",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("Montant", models.IntegerField()),
                (
                    "immatriculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.vehicule"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Patente",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Label_patente", models.IntegerField(default=0)),
                ("Date_debut", models.DateField()),
                ("Date_fin", models.DateField()),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "immatriculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.vehicule"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Notebook",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_arrivage",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "statut_vehicule",
                    models.CharField(
                        choices=[("garage", "Garage"), ("circulation", "Circulation")],
                        default="garage",
                        editable=False,
                        max_length=15,
                    ),
                ),
                (
                    "motif",
                    models.CharField(
                        choices=[
                            ("En_panne", "En panne"),
                            ("visite_technique", "Visite technique"),
                        ],
                        max_length=50,
                    ),
                ),
                ("commentaire", models.TextField()),
                ("date_sortie", models.DateTimeField(blank=True, null=True)),
                ("Kilometrage", models.IntegerField()),
                (
                    "chauffeur",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxi.liaisonvehiculechauffeur",
                    ),
                ),
                (
                    "piece",
                    models.ManyToManyField(
                        blank=True, default=" aucune piece changer", to="taxi.piece"
                    ),
                ),
                (
                    "vehicule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxi.vehicule",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name="liaisonvehiculechauffeur",
            name="vehicule",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="taxi.vehicule"
            ),
        ),
        migrations.CreateModel(
            name="Depense",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Montant", models.IntegerField()),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("Date_depense", models.DateField()),
                (
                    "Nom_du_Founissuer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxi.fournisseurs",
                    ),
                ),
                (
                    "piece",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.piece"
                    ),
                ),
                (
                    "immatriculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.vehicule"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CarteStationnement",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Date_de_debut", models.DateField()),
                ("Date_de_fin", models.DateField()),
                ("Label_carte_stationnement", models.IntegerField(default=0)),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "immatriculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.vehicule"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Assurance",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Label_assurance", models.IntegerField(default=0)),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("Date_debut", models.DateField()),
                ("Date_fin", models.DateField()),
                (
                    "Assureur",
                    models.CharField(
                        choices=[("MATCA", "MATCA"), ("ASACI", "ASACI")],
                        default="Assureur inconnu",
                        max_length=255,
                    ),
                ),
                ("Montant_Assurance", models.IntegerField()),
                (
                    "immatriculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.vehicule"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="VerificationCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=6)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vidange",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Label_vidange", models.IntegerField(default=0)),
                (
                    "Filtre_a_huile",
                    models.CharField(
                        choices=[("oui", "Oui"), ("non", "Non")], max_length=3
                    ),
                ),
                (
                    "Filtre_a_air",
                    models.CharField(
                        choices=[("oui", "Oui"), ("non", "Non")], max_length=3
                    ),
                ),
                (
                    "Filtre_a_pollen",
                    models.CharField(
                        choices=[("oui", "Oui"), ("non", "Non")], max_length=3
                    ),
                ),
                (
                    "Filtre_a_gasoil",
                    models.CharField(
                        choices=[("oui", "Oui"), ("non", "Non")], max_length=3
                    ),
                ),
                ("Kilometrage_vidange", models.IntegerField()),
                ("Kilometrage_prochaine_vidange", models.IntegerField()),
                (
                    "Date_vidange",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("Observation", models.TextField()),
                (
                    "Nom_chauffeur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.chauffeur"
                    ),
                ),
                (
                    "immatriculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.vehicule"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="VisiteTechnique",
            fields=[
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Ref", models.IntegerField(default=0)),
                ("Date_de_debut", models.DateField()),
                ("Date_de_fin", models.DateField()),
                (
                    "Centre_agree",
                    models.CharField(
                        choices=[("SICTA", "SICTA"), ("MAYELIA", "MAYELIA")],
                        default="SICTA",
                        max_length=8,
                    ),
                ),
                (
                    "Vignette",
                    models.CharField(
                        choices=[
                            ("OUI", "Vignette renouvelée"),
                            ("NON", "Vignette non renouvelée"),
                        ],
                        default="OUI",
                        max_length=3,
                    ),
                ),
                (
                    "Numero_vignette",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("Montant", models.IntegerField()),
                (
                    "Observation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "Date_ajout",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "immatriculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxi.vehicule"
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["Date_de_debut"], name="taxi_visite_Date_de_9b304a_idx"
                    ),
                    models.Index(
                        fields=["Date_de_fin"], name="taxi_visite_Date_de_9cc111_idx"
                    ),
                    models.Index(
                        fields=["immatriculation"],
                        name="taxi_visite_immatri_c22b85_idx",
                    ),
                ],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
